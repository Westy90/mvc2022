{% extends "base.html.twig" %}


{% block title %}Report{% endblock %}

{% block content %}

<h1> Report </h1>
Här presenteras redovisningstexter för kursens kmom.


<h1> KMOM01 </h1>

<p>Jag har tidigare läst en introduktionskurs i c++ 10,5 hp där objektorienterad programmering ingick
    jag har även läst kursen oopython vid tidigare kursperiod. Förra året läste jag oophp men kom
    bara till kmom02, så jag misslyckades med kursen. Men det är nya tag som gäller nu!
    <br><br>
    Gällande objektorienterat i php så är en klass en slags "mall" som sedan objekt instansieras från.
    En instans/objekt innehåller properties (som är som variabler som tillhör instansen).
    <br><br>
    Metoder, som är definerade i klassen överförs inte till själva instansen utan lagras i
    klassen och anropas genom den. Däremot om man skapar metoder till den specifika instansen, så lagras det i den specifika instansen.
    Detta uppfattar jag som en skillnad mot python där hela klassens properties och metoder kopierades till
    instansen.
    <br><br>
    Man bör inte ändra/läsa en instans properties direkt utan det bör gå genom getter och setters-metoder
    som kan på ett kontrollerat sätt ändra instansens properties, vilket blir som ett slags API.
    Genom inkapsling, dvs att sätta en properties som private, så kan man på ett "hårt" sätt hindra att
    properties ändras utan getters/setters. Det är en viss skillnad mot python där man satte ett underscore
    framför propertien för att indikera att den var private, men på ett "mjukt" sätt, dvs det gick
    ändå att ändra den utan en setter-metod.
    <br><br>
    Jag tycker att strukturen är mycket bättre än förra årets struktur. Dels bra att det är styrt
    att vi kör på ett ramverk. Det är också tydligare hur routern fungerar och jag känner att jag kan
    dra paraleller till hur vi arbetade med databaskursen och htmlphp, vilket jag hade svårare att förstå
    förra året. Jag gillar nog särskilt strukturen för base.html.twig och hur de olika blocken
    ersätts av home/report/about, det är en tydlig paralell till hur vi gjorde i htmlphp.
    <br><br>
    De delar inom PHP the right way som jag ögnade igenom och kändes intressanta var databaser, om vi
    kan jobba på ett än smidigare sätt än vad vi gjorde i databaskursen/htmlphp. Servers and deployment,
    vore intressant att veta hur man skulle kunna sätta upp en server lite mer självständigt, alltså
    att inte använda studentservern utan att använda exempelvis en raspberry pie eller något, dock kanske 
    utanför kursen scope. Sedan så tycker jag segementet om säkerhet vore intressant att djupdyka i,
    hur man ska hantera inkommande data och hur man ska kryptera. Det var ju något vi vidrörde i
    htmlphp samt också till viss del i python-kursen vilket jag tyckte ver intressant.
    <br><br>
    Mitt TIL för detta kursmoment var väl helheten, att det gick ganska lätt att greppa
    konceptet med routing och controllers.
</p>

<h1> KMOM02 </h1>

<p> </p>

<h1> KMOM03 </h1>

<p> </p>

<h1> KMOM04 </h1>

<p> </p>

<h1> KMOM05 </h1>

<p> </p>

<h1> KMOM06 </h1>

<p> </p>

<h1> KMOM10 </h1>

<p> </p>

{% endblock %}